   return Scaffold(
          bottomNavigationBar: Container(
            height: 40,
            width: 50,
            alignment: Alignment.center,
            margin: const EdgeInsets.only(bottom: 5.0, left: 2, right: 2),
            decoration: BoxDecoration(
              color: Color.fromARGB(255, 145, 152, 250),
              borderRadius: BorderRadius.circular(10),
            ),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                GestureDetector(
                  child: IconButton(
                    enableFeedback: false,
                    splashColor: Colors.transparent,
                    highlightColor: Colors.transparent,
                    icon: index() == 0
                        ? const Icon(Icons.home_filled, color: Colors.white)
                        : const Icon(Icons.home,
                            color:Color.fromARGB(255, 153, 153, 193)),
                    onPressed: () {
                      setState(() {
                        changePanel(0);
                      });
                    },
                  ),
                  onDoubleTap: () {
                    Navigator.push(context,
                        MaterialPageRoute(builder: (BuildContext _context) {
                      return GestureDetector(
                        child: Text("Build"),
                        onDoubleTap: () {
                          Navigator.push(context, MaterialPageRoute(
                              builder: (BuildContext _contex) {
                            return ListView.builder(
                              scrollDirection: Axis.vertical,
                              itemCount:
                                  10, // Replace with the actual number of items
                              itemBuilder: (BuildContext context, int index) {
                                return Container(
                                  width:
                                      150, // Set the desired width of each item
                                  margin: EdgeInsets.symmetric(vertical: 3),
                                  // Add horizontal spacing between items
                                  color: Colors
                                      .blue, // Replace with your desired item color
                                  child: Center(
                                      child: Container(
                                    child: Text(
                                      'Item $index',
                                      style: TextStyle(
                                        decoration: TextDecoration.none,
                                        fontSize: 16,
                                        color: Colors.white,
                                      ),
                                    ),
                                    width: 200,
                                    margin: EdgeInsets.all(10),
                                    alignment: Alignment.center,
                                    decoration: BoxDecoration(
                                        color: Colors.red,
                                        borderRadius:
                                            BorderRadius.circular(10)),
                                  )),
                                );
                              },
                            );
                          }));
                        },
                      );
                    }));
                  },
                ),
                IconButton(
                  enableFeedback: false,
                  highlightColor: Colors.transparent,
                  splashColor: Colors.transparent,
                  icon: index() == 1
                      ? const Icon(Icons.event, color: Colors.white)
                      : const Icon(Icons.event_available_rounded,
                          color:Color.fromARGB(255, 153, 153, 193)),
                  onPressed: () {
                    setState(() {
                      changePanel(1);
                    });
                  },
                ),
                IconButton(
                  enableFeedback: false,
                  splashColor: Colors.transparent,
                  highlightColor: Colors.transparent,
                  icon: index() == 2
                      ? const Icon(Icons.local_activity_sharp,
                          color: Colors.white)
                      : const Icon(Icons.local_activity_rounded,
                          color:Color.fromARGB(255, 153, 153, 193)),
                  onPressed: () {
                    setState(() {
                      changePanel(2);
                    });
                  },
                ),
                IconButton(
                  enableFeedback: false,
                  splashColor: Colors.transparent,
                  highlightColor: Colors.transparent,
                  icon: index() == 3
                      ? const Icon(Icons.person_2_outlined, color: Colors.white)
                      : const Icon(Icons.person_2,
                          color:Color.fromARGB(255, 153, 153, 193)),
                  onPressed: () {
                    setState(() {
                      changePanel(3);
                    });
                  },
                ),
              ],
            ),
          ),
          floatingActionButton: floatbtn(),
          body: SafeArea(child: Pad(panel[index()])));
    });



    
  Widget floatbtn() {
    return FloatingActionButton(
      onPressed: showLogs,
      child: const Icon(Icons.add),
    );
  }

  void showLogs() {
    showDialog(
        context: context,
        builder: (BuildContext _context) {
          return AlertDialog(
            content: Text("Please enter your name"),
            actions: [
              TextButton(onPressed: () {}, child: Text("name")),
              TextField(
                onChanged: (value) {
                  setState(() {
                    inputtext = value;
                  });
                },
                decoration: InputDecoration(
                    enabledBorder: OutlineInputBorder(
                      borderSide: BorderSide(
                          width: 2,
                          color: Color.fromARGB(
                              255, 230, 243, 237)), //<-- SEE HERE
                      borderRadius: BorderRadius.circular(10.0),
                    ),
                    focusedBorder: OutlineInputBorder(
                      borderSide: BorderSide(
                          width: 2,
                          color: Color.fromARGB(
                              255, 213, 235, 224)), //<-- SEE HERE
                      borderRadius: BorderRadius.circular(10.0),
                    )),
              )
            ],
          );
        });
  }
}

Widget Pad(Widget w) {
  return Padding(child: w, padding: EdgeInsets.all(10));
}
